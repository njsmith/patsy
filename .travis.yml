 
language: minimal
matrix:
  include:
    - env:
      - PYTHON_VERSION=2.7
    - env:
      - PYTHON_VERSION=3.4
    - env:
      - PYTHON_VERSION=3.5
      before_install: 
      # Work around terrible pathological behaviour in OpenBLAS multithreading, that causes execution time to blow up from 3 minutes to 18 minutes, apparently in SVD on smallish matrices
      - export OMP_NUM_THREADS=1
      # See: http://conda.pydata.org/docs/travis.html
      - wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
      - bash miniconda.sh -b -p $HOME/miniconda
      - export PATH="$HOME/miniconda/bin:$PATH"
      - hash -r
      - conda config --set always_yes yes --set changeps1 no
      - conda update -q conda
      - conda info -a
      - export PKGS="numpy scipy coverage nose pip"
      - if [ "$PANDAS_VERSION_STR" != "NONE" ]; then export PKGS="${PKGS} pandas${PANDAS_VERSION_STR}"; fi
      - conda create -q -n testenv python=$PYTHON_VERSION ${PKGS}
      - source activate testenv
   
    # 0.14.0 is the last version with the old categorical system
    # libfortran=1.0 is needed to work around a bug in anaconda
    # (https://github.com/pydata/patsy/pull/83#issuecomment-206895923)
    - arch: arm64
      dist: xenial
      env:
      - PYTHON_VERSION=3.7
      before_install:
      - wget -q "https://github.com/Archiconda/build-tools/releases/download/0.2.3/Archiconda3-0.2.3-Linux-aarch64.sh" -O archiconda.sh
      - chmod +x archiconda.sh
      - bash archiconda.sh -b -p $HOME/miniconda
      - export PATH="$HOME/miniconda/bin:$PATH"
      - sudo cp -r $HOME/miniconda/bin/* /usr/bin/
      - hash -r
      - sudo conda config --set always_yes yes --set changeps1 no
      - sudo conda update -q conda
      - sudo apt-get install python3
      - sudo apt-get install python3-pip
      - sudo conda info -a
      - export PKGS="numpy scipy coverage nose pip"
      - if [ "$PANDAS_VERSION_STR" != "NONE" ]; then export PKGS="${PKGS} pandas${PANDAS_VERSION_STR}"; fi
      - sudo conda create -q -n testenv python=3.7 ${PKGS}
      - source activate testenv
      install: 
      - python --version
      - python setup.py sdist
      - sudo python3.7 setup.py install 
    
# This disables sudo, but makes builds start much faster
# See http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/
sudo: false
install:
  - python --version
  - python setup.py sdist
  - pip install dist/*
 
script:
  # We change directories to make sure that python won't find the copy
  # of patsy in the source directory.
  - mkdir empty
  - cd empty
  - INSTALLDIR=$(python -c "import os; import patsy; print(os.path.dirname(patsy.__file__))")
  - export PYTHONWARNINGS=default PATSY_FORCE_NO_WARNINGS=1
  # The --exe is because python sometimes marks all installed modules
  # as executable, so without --exe nosetests will just ignore
  # everything. Baffling, but so it goes.
  - coverage run --source=$INSTALLDIR --rcfile=../.coveragerc $(which nosetests) -vvv --nocapture --exe --failure-detail --all-modules $INSTALLDIR
  - coverage report --rcfile=../.coveragerc --show-missing
  - python ../tools/check-API-refs.py
  
after_success:
  #- pip install coveralls && coveralls
  - pip install codecov && codecov
